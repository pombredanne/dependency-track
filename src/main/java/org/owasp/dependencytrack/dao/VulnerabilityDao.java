/*
 * This file is part of Dependency-Track.
 *
 * Dependency-Track is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * Dependency-Track is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Dependency-Track. If not, see http://www.gnu.org/licenses/.
 */
package org.owasp.dependencytrack.dao;

import org.owasp.dependencytrack.model.ApplicationVersion;
import org.owasp.dependencytrack.model.LibraryVersion;
import org.owasp.dependencytrack.model.Vulnerability;
import org.owasp.dependencytrack.model.VulnerabilitySummary;
import org.owasp.dependencytrack.model.VulnerabilityTrend;
import org.owasp.dependencytrack.model.VulnerableComponent;
import org.springframework.context.ApplicationEventPublisherAware;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * Created by Jason Wraxall on 1/12/15.
 */
public interface VulnerabilityDao extends ApplicationEventPublisherAware {

	@SuppressWarnings("unchecked")
	List<VulnerableComponent> getVulnerableComponents(ApplicationVersion applicationVersion);

	List<VulnerabilitySummary> getVulnerabilitySummary(int id);

	VulnerabilitySummary getVulnerabilitySummary(ApplicationVersion applicationVersion);

	List<Vulnerability> getVulnsForLibraryVersion(LibraryVersion libraryVersion);

	VulnerabilityTrend getVulnerabilityTrend(VulnerabilityTrend.Timespan timespan, int appVersionId);

	void initiateFullDependencyCheckScan();

	@Transactional(rollbackFor = Exception.class)
	void updateApplicationVersionVulnerabilityCount();

	@Transactional(rollbackFor = Exception.class)
	void updateLibraryVersionVulnerabilityCount();
}
