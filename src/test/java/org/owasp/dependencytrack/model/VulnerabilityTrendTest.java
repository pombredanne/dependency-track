/*
 * This file is part of Dependency-Track.
 *
 * Dependency-Track is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * Dependency-Track is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Dependency-Track. If not, see http://www.gnu.org/licenses/.
 */
package org.owasp.dependencytrack.model;

import static org.junit.Assert.assertEquals;

import org.junit.Test;
import org.springframework.transaction.annotation.Transactional;

import java.util.Date;

/**
 * JUnit test for the {@link VulnerabilityTrend} class.
 */
public class VulnerabilityTrendTest {

    @Test
    public void testTimespan() throws Exception {
        assertEquals(VulnerabilityTrend.Timespan.WEEK, VulnerabilityTrend.Timespan.getTimespan(7));
        assertEquals(VulnerabilityTrend.Timespan.MONTH, VulnerabilityTrend.Timespan.getTimespan(30));
        assertEquals(VulnerabilityTrend.Timespan.QUARTER, VulnerabilityTrend.Timespan.getTimespan(90));
        assertEquals(VulnerabilityTrend.Timespan.YEAR, VulnerabilityTrend.Timespan.getTimespan(365));
        assertEquals(VulnerabilityTrend.Timespan.DEFAULT, VulnerabilityTrend.Timespan.getTimespan(1));
        assertEquals(VulnerabilityTrend.Timespan.DEFAULT, VulnerabilityTrend.Timespan.getTimespan(67));

        assertEquals(7, VulnerabilityTrend.Timespan.WEEK.getDays());
        assertEquals(30, VulnerabilityTrend.Timespan.MONTH.getDays());
        assertEquals(90, VulnerabilityTrend.Timespan.QUARTER.getDays());
        assertEquals(365, VulnerabilityTrend.Timespan.YEAR.getDays());

        assertEquals(7, VulnerabilityTrend.Timespan.WEEK.getDivisions());
        assertEquals(30, VulnerabilityTrend.Timespan.MONTH.getDivisions());
        assertEquals(12, VulnerabilityTrend.Timespan.QUARTER.getDivisions());
        assertEquals(12, VulnerabilityTrend.Timespan.YEAR.getDivisions());
    }

    @Test
    @Transactional
    public void testObject() throws Exception {
        VulnerabilityTrend trend = new VulnerabilityTrend();

        assertEquals(0, trend.getDataPoints());
        assertEquals(0, trend.getTrend().size());

        Date scanDate = new Date();
        VulnerabilitySummary summary = new VulnerabilitySummary();
        summary.addHigh();
        trend.addData(scanDate, summary);

        assertEquals(1, trend.getTrend().size());
        assertEquals(1, trend.getDataPoints());
        assertEquals(1, trend.getTrend().get(scanDate).getHigh());
    }
}
